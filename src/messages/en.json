{
  "Nav": {
    "home": "Home",
    "title": "Technical Debt Report",
    "cta": "Analyze a repository"
  },
  "Header": {
    "Auth": {
      "continue": "Continue with GitHub",
      "continueBusy": "Continuing with GitHub‚Ä¶",
      "disconnect": "Disconnect GitHub",
      "disconnectBusy": "Disconnecting‚Ä¶",
      "avatarAlt": "Avatar",
      "githubUserFallback": "GitHub User"
    },
    "Theme": {
      "toggleAria": "Toggle theme",
      "dark": "üåô Dark",
      "light": "‚òÄÔ∏è Light"
    },
    "Locale": {
      "selectAria": "Select language"
    },
    "about": "About",
    "features": "Features"
  },
  "Home": {
    "analyzeGithubRepo": "Analyze a GitHub repo",
    "continueWithoutLogin": "Continue without login",
    "continueWithoutLoginDots": "Continue without login‚Ä¶",
    "analyze": "Analyze",
    "analyzing": "Analyzing‚Ä¶",
    "retryIn": "Retry in {seconds}s",
    "quotaTitle": "You're hitting the anonymous GitHub quota. Sign in or wait {seconds}s.",
    "anonTitle": "You are analyzing without logging in.",
    "anonDesc": "Some features may be limited (private repos disabled, 60 reqs/hr).",
    "networkError": "Network error",
    "analyzeCtaAlt": "GitHub Logo",
    "quickStartTitle": "Get started in 3 steps",
    "quickStartSubtitle": "No setup: paste the GitHub URL, run the analysis, read the report",
    "quickStep1Title": "Paste the repository URL",
    "quickStep1Tip": "Format org/repo. Example: github.com/vercel/next.js",
    "quickStep2Title": "Run the analysis",
    "quickStep2Tip": "Read-only via the GitHub API, no cloning required",
    "quickStep3Title": "Read the report",
    "quickStep3Tip": "Dependencies, dead code, secrets, activity",
    "examplesTitle": "Valid URL examples",
    "githubRequired": "(GitHub connection is required)",
    "myReposTitle": "My GitHub repositories",
    "browseRepos": "Browse my repositories",
    "hide": "Hide",
    "tips": {
      "urlFormat": "URL format: https://github.com/org/repo",
      "urlFormatTips": "The repository can be public or private (if GitHub connection is active).",
      "readonly": "Read-only",
      "readonlyTips": "DebtCheck only reads the GitHub API : no clone, no changes.",
      "scopes": "Required scopes",
      "scopesTips": "Minimal: repo:read. Private repos need the proper authorization."
    }
  },
  "Repos": {
    "sectionTitle": "My Github repositories",
    "sectionSubtitle": "Select a repository to analyze its technical debt.",
    "refresh": "Refresh",
    "staleTitle": "Cache potentially stale, refreshed data may be available.",
    "staleDesc": "The displayed data may have been served from the cache. Refresh to reload.",
    "searchPlaceholder": "Search a repository‚Ä¶",
    "empty": "No repositories to display here.",
    "privacyPublic": "public",
    "privacyPrivate": "private",
    "noLang": "No lang",
    "pushed": "pushed {when}",
    "ariaChoose": "Choose {fullName}",
    "page": "Page {page}",
    "prev": "Previous",
    "next": "Next"
  },
  "Report": {
    "title": "Technical Debt Report",
    "copy": { "btn": "Copy JSON", "copied": "Copied!" },
    "activity": {
      "title": "Repository activity",
      "fresh": "Fresh",
      "stale": "Stale",
      "updatedAt": "Updated at",
      "pushedAt": "Pushed at",
      "sinceUpdate": "{count, plural, one {# day since last update} other {# days since last update}}",
      "sincePush": "{count, plural, one {# day since last push}   other {# days since last push}}",
      "help": {
        "main": "Signals to detect inactivity or staleness in the repository.",
        "updatedAt": "Time since the default branch was updated (any ref update).",
        "pushedAt": "Time since the last commit was pushed."
      }
    },
    "issuesPrs": {
      "title": "Issues & Pull Requests",
      "openPct": "{pct}% open",
      "stalePrs": "{count} stale PRs",
      "openIssuesRatio": "Open issues ratio",
      "stalePrs_30": "Stale PRs (‚â•30d)",
      "hintsTitle": "Quality hints",
      "hintCloseIssues": "Close resolved issues to keep the ratio healthy.",
      "hintReviewPrs": "Review/merge or close stale PRs regularly.",
      "help": {
        "main": "Backlog and review hygiene.",
        "openPct": "Share of issues currently open vs total.",
        "stalePrs": "PRs with no activity for 30+ days.",
        "openIssuesRatio": "Open issues / total issues.",
        "stalePrs_30": "Count of PRs with 30 days without activity."
      }
    },
    "deps": {
      "title": "Dependencies",
      "package": "Package",
      "current": "Current",
      "latest": "Latest",
      "deprecated": "Deprecated",
      "yes": "yes",
      "no": "no",
      "status": "Status",
      "help": {
        "main": "Outdated/Deprecated packages can cause security and maintenance risks.",
        "overall": "Overall health derived from the worst dependency status.",
        "package": "Dependency name as declared.",
        "current": "Version pinned in the project.",
        "latest": "Latest published version.",
        "deprecated": "Marked as deprecated by the registry.",
        "status": "Severity based on your rules (ok/warning/error)."
      }
    },
    "risks": {
      "title": "Risks & hygiene",
      "noScanPill": "No code scan",
      "noScanTitle": "No static analysis",
      "noScanDesc": "This report did not include Rust analysis results.",
      "secretsFound": "Potential secrets found: {count}",
      "secretsAdvice": "Review and rotate keys if confirmed. Tests and placeholders can be ignored when safe rules apply.",
      "noSecretsTitle": "No secrets detected",
      "noSecretsDesc": "Static scan did not find suspicious values.",
      "envTitle": ".env-like files present",
      "envDesc": "Sensitive configuration files are committed in the repo.",
      "deadSummaryTitle": "Dead code summary",
      "deadSummarySub": "Identifiers declared but never used",
      "unusedDecl": "Unused declarations",
      "secrets": "Secrets",
      "envPresent": ".env present",
      "secretsDetails": "Secrets details",
      "deadDetails": "Dead code details",
      "file": "File",
      "name": "Name",
      "kind": "Kind",
      "preview": "Preview",
      "line": "Line",
      "column": "Column",
      "identifier": "Identifier",
      "emptySecrets": "No secrets detected.",
      "emptyDead": "No dead code detected.",
      "help": {
        "main": "Automatic findings from the files static analyzer.",
        "secretsFound": "Values that look like API keys/tokens in source files.",
        "noSecrets": "No credential-like strings detected.",
        "envPresent": "Repository contains files starting with .env.",
        "deadSummary": "High-level counts computed from parse results.",
        "unusedDecl": "Variables/functions declared but never referenced.",
        "secretsStat": "Total candidate credentials found.",
        "envStat": "Whether .env files exist in the repo."
      }
    }
  },
  "Jira": {
    "connect": "Connect Jira",
    "connectAria": "Connect Jira",
    "disconnect": "Disconnect Jira",
    "disconnectBusy": "Disconnecting‚Ä¶",
    "createBacklog": "Create backlog",
    "createBacklogAria": "Create backlog",
    "modal": {
      "title": "Create backlog in Jira",
      "close": "Close",
      "loading": "Loading projects‚Ä¶",
      "error": "Error: {msg}",
      "empty": "No Jira projects found.",
      "key": "Key: {key}",
      "privacyPublic": "Public",
      "privacyPrivate": "Private",
      "createdBy": "Created by ",
      "recent": "recent",
      "historyLoading": "Loading‚Ä¶",
      "historyEmpty": "No recent tickets.",
      "cancel": "Cancel",
      "creating": "Creating‚Ä¶",
      "createTickets": "Create tickets",
      "createdSummary": "{count, plural, one {# ticket created} other {# tickets created}}: {keys}",
      "createError": "{msg}{details, select, undefined {} other { ‚Äì {details}}}"
    }
  },
  "About": {
    "title": "About me, Axel",
    "subtitle": "Full-Stack Developer & creator of DebtCheck",
    "heroImgAlt": "Photo of Axel Gil",
    "heroTitle": "Hi, I‚Äôm Axel üëã",
    "heroText": {
      "1": "I build performant, pragmatic web products.",
      "2": "was born to make a repository‚Äôs",
      "3": "technical health",
      "4": "clear at a glance: fast, reliable and 100% read-only."
    },
    "badges": {
      "fullstack": "Full Stack",
      "qualityDx": "Quality & DX"
    },
    "whyTitle": "Why I built DebtCheck",
    "whyText": {
      "1": "After working on complex apps (Angular, Java, PHP, etc.), I often saw poor visibility on technical debt.",
      "2": "aims to give a crisp snapshot ‚Äî dependencies, dead code, secrets, activity ‚Äî",
      "3": "without cloning",
      "4": "and while staying blazing fast."
    },
    "techStackTitle": "Tech stack",
    "techStackSubtitle": "Chosen for performance and security",
    "tech": {
      "frontendLabel": "Frontend",
      "backendLabel": "Backend",
      "platformLabel": "Platform",
      "dataLabel": "Data & cache"
    },
    "visionTitle": "Vision & what's next",
    "visionSubtitle": "Coming soon",
    "visionItem1": "Duplication detection and additional code smells",
    "visionItem2": "Multi-language analysis (extended JS/TS, CSS/SCSS, YAML‚Ä¶)",
    "visionItem3": "Report export and CI/CD integration",
    "featuresPreviewTitle": "Key features",
    "featuresPreviewSubtitle": "Quick glance ‚Äî a detailed page is dedicated",
    "journeyTitle": "My journey",
    "journeySubtitle": "A selection of relevant milestones",
    "journey": {
      "sacem": {
        "title": "2024‚Äì2025 ‚Äî Full-Stack Developer (apprenticeship)",
        "place": "Sacem",
        "p1": "Angular + Java Spring Boot, handling UAT feedback and demos",
        "p2": "Unit & integration tests, internal tooling (multi-store helper)"
      },
      "recrutimmo": {
        "title": "2023‚Äì2024 ‚Äî Full-Stack Developer (apprenticeship)",
        "place": "Recrutimmo",
        "p1": "Angular & PHP, UI refactors and improvements",
        "p2": "Documented Docker dev env, Firebase push notifications"
      },
      "adico": {
        "title": "Jan‚ÄìJul 2023 ‚Äî Web Developer (fixed-term)",
        "place": "Adico",
        "p1": "Maintenance & evolutions on a ticketing site (jQuery, PHP)",
        "p2": "Chatbot improvements + ticketing site built from scratch"
      },
      "schools": {
        "title": "2019‚Äì2025 ‚Äî Education",
        "place": "Web School Factory, IUT Amiens",
        "p1": "Master in Web Dev (React/Next.js, Express, PM, UX/UI)",
        "p2": "Professional Bachelor RGI (Docker, C#, PHP, Java)",
        "p3": "DUT CS (foundations, DB, networks, IoT)"
      }
    },
    "featuresPreview": {
      "items": {
        "deps": {
          "title": "Outdated dependencies",
          "desc": "Compares declared versions to the latest and classifies by severity."
        },
        "dead": {
          "title": "Dead code",
          "desc": "Finds unused variables, functions, imports/exports via AST analysis."
        },
        "secrets": {
          "title": "Secrets & .env",
          "desc": "Flags .env files and key/token patterns with noise-reduction filters."
        },
        "activity": {
          "title": "Repository activity",
          "desc": "Summarizes updates, commits and PRs to gauge freshness."
        },
        "readonly": {
          "title": "Read-only",
          "desc": "No clone ‚Äî only GitHub API for faster and safer analysis."
        }
      }
    },
    "ctaFinalTitle": "Want to know more?",
    "ctaFinalSubtitle": "Let‚Äôs talk technical debt, DX and roadmap ‚Äî available from October 2025.",
    "ctaExplore": "Explore features",
    "ctaContact": "Contact me",
    "ctaGitHub": "GitHub",
    "ctaLinkedIn": "LinkedIn",
    "ctaCv": "View my CV",
    "viewAll": "View all",
    "ctaTryNow": "Try it now"
  },
  "Features": {
    "introTagline": "A fast, read-only static analyzer that highlights hidden technical debt in any GitHub repository ‚Äî without cloning a single line.",
    "headerTitle": "Features of the DebtCheck engine",
    "headerSubtitle": "Static analysis, dependency insights and repository health ‚Äî all read-only via the GitHub API.",
    "cta": {
      "about": "About",
      "analyze": "Try it now"
    },
    "toc": {
      "deps": "Outdated dependencies",
      "dead": "Dead code",
      "secrets": "Secrets & keys",
      "env": ".env files",
      "activity": "Repository activity",
      "readonly": "Read-only mode"
    },
    "deps": {
      "title": "Outdated dependencies",
      "intro": "DebtCheck compares declared versions with the latest published releases to assess upgrade urgency.",
      "rules": {
        "ok": "Current version equals latest ‚Üí OK",
        "warnSameMajor": "Same major version ‚Üí minor update available",
        "warnPlusOne": "Major +1 difference ‚Üí update recommended",
        "errorTooOld": "Major difference >1 ‚Üí outdated (error)"
      },
      "codeLabel": "Example package.json extract",
      "howLatest": "How are latest versions determined?"
    },
    "dead": {
      "title": "Dead code detection",
      "codeLabel": "Example: unused vs used exports",
      "points": {
        "fnsVars": "Functions or variables never referenced",
        "importsExports": "Unused imports or exports",
        "crossFile": "Cross-file exports considered to reduce false positives",
        "ignores": "Ignores types, placeholders and test files"
      }
    },
    "secrets": {
      "title": "Secrets and key detection",
      "codeLabel": "Example key detection",
      "points": {
        "names": "Suspicious identifiers: token, api_key, secret‚Ä¶",
        "patterns": "Pattern and length checks for known key formats",
        "noise": "False-positive filters for placeholders and tests"
      },
      "noMutationTip": "Does the analyzer modify the code?",
      "noMutationAnswer": "No. The analysis is entirely read-only ‚Äî no source files are ever written or changed."
    },
    "env": {
      "title": ".env file presence",
      "points": {
        "detects": "Detects any file starting with .env (e.g., .env, .env.local, .env.production)",
        "advice": "Sensitive configs should never be committed; use a secrets manager instead."
      }
    },
    "activity": {
      "title": "Repository activity",
      "intro": "Freshness signals based on last commit, pushes and PRs. Shown as 'Fresh / Stale' badges in the report."
    },
    "readonly": {
      "title": "Read-only architecture",
      "points": {
        "rust": "Rust microservice reads via GitHub REST API only",
        "concurrent": "Concurrent multi-file static analysis for speed and precision",
        "results": "Produces a structured, explainable technical debt report"
      }
    },
    "jira": {
      "title": "Jira integration",
      "intro": "From any report, you can instantly create a backlog in Jira ‚Äî directly linked to your detected issues or dependencies.",
      "points": {
        "create": "One-click backlog creation from the technical debt report",
        "autoMap": "Auto-maps issues and dependencies to Jira tickets",
        "sync": "Syncs project and repository context automatically"
      },
      "labelOneClick": "How does one-click creation work?",
      "tip": "DebtCheck uses your connected Jira account to generate backlog tickets instantly, including priority, labels and descriptions derived from the analysis."
    }
  }
}
